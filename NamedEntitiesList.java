import java.util.LinkedHashMap;import java.util.List;import java.util.Map;/** * Contains a list of named entities. */class NamedEntitiesList {  /** List of named entities */  private LinkedHashMap<String, Entity> namedEntities;  /**   * Constructor.   * Initializes collection to hold NER information where an Entity object   * contains a noun, its classified entity,and its sentence number.   */  NamedEntitiesList() {    this.namedEntities = new LinkedHashMap<>();  }  /**   * Adds a noun, named entity, and corresponding sentence number.   * @param noun - named entity noun   * @param ner - named entity tag   * @param sentenceNumber - sentence number entity occurred in   */  void add(final String noun, final String ner, final int sentenceNumber) {    this.namedEntities.put(noun, new Entity(noun, ner, sentenceNumber));  }  /**   * Gets the type of named entity information the noun is (e.g., date, person).   * @param noun - noun existing in the named entity list   * @return type - type of entity information   */  protected String getType(final String noun) {    return this.namedEntities.get(noun).getType();  }  /**   * Gets a time entity.   * @return time entity   */  String getTimeEntity() {    StringBuilder time = new StringBuilder("");    int counter = 0; // Preventing too many data items being thrown together    for (Map.Entry<String, Entity> pair : this.namedEntities.entrySet()) {      Entity entity = pair.getValue();        String noun = entity.getNoun();        if (entity.getType().equals("DATE") && counter < 3) {          time.append(" ");          time.append(noun);          ++counter;        }    }    return time.toString();  }  /**   * Gets the sentence number for a given noun.   * @param noun - noun in list of entities   * @return sentence number   */  protected List<Integer> getSentenceNumbers(final String noun) {    return this.namedEntities.get(noun).getSentenceNumbers();  }  @Override  public String toString() {    StringBuilder output = new StringBuilder();    for (Map.Entry<String, Entity> pair : this.namedEntities.entrySet()) {      String name = pair.getKey();      Entity entity = pair.getValue();      output.append(name);      output.append(" -> ");      output.append(entity.getType());      output.append(" (sentence numbers: ");      // Dealing with multiple sentence numbers      output.append(entity.getSentenceNumbers().toString());      output.append(")\n");    }    return output.append("\n").toString();  }}